Questions :

Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

 

Example 1:


Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
Example 2:

Input: height = [4,2,0,3,2,5]
Output: 9
 

Constraints:

n == height.length
1 <= n <= 2 * 104
0 <= height[i] <= 105

Coding :

class Solution {
public:
    int trap(vector<int>& height) {
        int size = height.size();
        int left[size];
        left[0] = height[0];
        for(int i=1; i<size; i++) {
            if(height[i] > left[i-1]) {
                left[i] = height[i];
            }
            else
                left[i] = left[i-1];
        }
        int right[size];
        right[size-1] = height[size-1];
        for(int i=size-2; i>=0; i--){
            if(height[i] > right[i+1])
                right[i] = height[i];
            else
                right[i]=right[i+1];
        }
        int sum=0;
        for(int i=0; i<size; i++){
            sum += min(left[i], right[i])-height[i];
            }

        return sum;
    }
};
