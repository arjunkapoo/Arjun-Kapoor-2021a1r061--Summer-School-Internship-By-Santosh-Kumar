Questions :

Objective

Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

Note

You have to solve this problem statement on leet code platform https://leetcode.com/problems/search-insert-position/

Example 1:

Input: nums = [1,3,5,6], target = 5 Output: 2

Example 2:

Input: nums = [1,3,5,6], target = 2 Output: 1

Example 3:

Input: nums = [1,3,5,6], target = 7 Output: 4

Input Format

First line take an input of N
Second Line take input of N elements
Third line take input of target element

Constraints

1 <= arr.length <= 100000
-100000 <= arr[i] <= 100000
arr contains distinct values sorted in ascending order.
-100000 <= target <= 100000

Output Format

Display the result

Sample Input 0

4
1 3 5 6
5
Sample Output 0

2

Coding :

#include <iostream>

int searchInsert(int* nums, int size, int target) {
    int left = 0;
    int right = size - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (nums[mid] == target) {
            return mid;
        } else if (nums[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    return left;
}

int main() {
    int N;
    std::cin >> N;

    int* nums = new int[N];
    for (int i = 0; i < N; ++i) {
        std::cin >> nums[i];
    }

    int target;
    std::cin >> target;

    int result = searchInsert(nums, N, target);
    std::cout << result << std::endl;

    delete[] nums;
    return 0;
}
